package templates

const (
	TS_MODEL_TEMPLATE = `
// This file was auto-generated by fabric. Delete this comment if the file is already checked and OK.
// Models need to extend an entity. Create a model first to import the entity.

import { {{.Name | title}}, I{{.Name | title}}, I{{.Name | title}}Map } from '#';
export interface ValidationResult {
	isValid: boolean;
	errors: string[];
}

export class {{.Name | title}}Model extends {{.Name | title}} {
constructor(data: I{{.Name | title}}Map) {
		super(data);
	}

	toMap(): I{{.Name | title}}Map {
		return this.toPlainObject();
	}

	static fromMap(data: I{{.Name | title}}Map): {{.Name | title}}Model {
	return new {{.Name | title}}Model(data);
	}

	toJson(): string {
		return JSON.stringify(this.toMap());
	}

	static fromJson(json: string): {{.Name | title}}Model {
	const data = JSON.parse(json);
	return {{.Name | title}}Model.fromMap(data);
	}


	toEntity(): I{{.Name | title}} {
		return {{.Name | title}}.create(this.toMap());
	}

	static fromEntity(entity: {{.Name | title}}): {{.Name | title}}Model {
	return new {{.Name | title}}Model(entity.toPlainObject());
	}

	equals(other: {{.Name | title}}Model): boolean {
		if (!other) return false;
		return this.uid === other.uid;
	}

	clone(): {{.Name | title}}Model {
		return {{.Name | title}}Model.fromMap({ ...this.toMap(), uid: crypto.randomUUID() });
	}

	validate(): ValidationResult {
		const errors: string[] = [];

		{{range .Params}}{{if not .Optional}}// Validate required field: {{.Name | title}}
		if (this._{{.Name}} === undefined || this._{{.Name}} === null) {
			errors.push('{{.Name | title}} is required');
		}{{end}}{{end}}

		// Add custom validation logic here
		// Example:
		// if (typeof this.{{(index .Params 0).Name}} === 'string' && this.{{(index .Params 0).Name}}.length < 3) {
		//     errors.push('{{(index .Params 0).Name}} must be at least 3 characters long');
		// }

		return {
			isValid: errors.length === 0,
			errors
		};
	}
}
	`
)
